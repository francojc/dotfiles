#!/usr/bin/env bash
# Change git remote URL
# Usage: g-remote-set -r <name> -u <url> [-C dir]

SCRIPT_NAME="g-remote-set"; SCRIPT_VERSION="1.0.0"
. "$(dirname "$0")/common"

usage(){ cat <<EOF
Usage: g-remote-set -r NAME -u URL [options]

Change a git remote URL for the current repository.

Options:
  -r NAME          Remote name (e.g., origin)
  -u URL           New URL for the remote
  -C DIR           Change to DIR before running
  -n               Dry run
  -q               Quiet
  -v               Verbose (repeatable)
  -h, --help       Show help
  --version        Show version
EOF
}

main(){
  local name="" url="" show_help=0 show_version=0
  # shellcheck disable=SC2046
  set -- $(canonicalize_long_opts "$@")
  local OPTIND=1 opt
  while getopts ":hvnqC:r:u:-:" opt; do
    case "$opt" in
      r) name="$OPTARG" ;;
      u) url="$OPTARG" ;;
      h) show_help=1 ;;
      v) VERBOSE=$((VERBOSE+1)) ;;
      q) QUIET=1 ;;
      n) DRY_RUN=1 ;;
      C) CHANGE_DIR="$OPTARG" ;;
      -) case "$OPTARG" in version) show_version=1 ;; *) die "Unknown long option --$OPTARG";; esac ;;
      :) die "Option -$OPTARG requires an argument" ;;
      \?) die "Unknown option: -$OPTARG" ;;
    esac
  done
  shift $((OPTIND-1)) || true

  [[ $show_help -eq 1 ]] && { usage; exit 0; }
  [[ $show_version -eq 1 ]] && { print_version; exit 0; }

  if [[ -n "$CHANGE_DIR" ]]; then
    [[ -d "$CHANGE_DIR" ]] || die "Directory not found: $CHANGE_DIR"
    cd "$CHANGE_DIR"
  fi

  require git
  [[ -n "$name" ]] || die "-r NAME is required"
  [[ -n "$url" ]] || die "-u URL is required"

  # Ensure we're in a git repo
  git rev-parse --is-inside-work-tree >/dev/null 2>&1 || die "Not a git repository"

  run git remote set-url "$name" "$url"
  log_info "Remote '$name' set to '$url'"
}

main "$@"
