#!/usr/bin/env bash
# Show git status for all nested repos under current directory

SCRIPT_NAME="g-status"; SCRIPT_VERSION="1.0.0"
. "$(dirname "$0")/common.sh"

usage(){ cat <<EOF
Usage: g-status [-C DIR]

Recursively find git repositories under current directory and show 'git status'.
EOF
}

main(){
  # shellcheck disable=SC2046
  set -- $(canonicalize_long_opts "$@")
  local show_help=0 show_version=0
  local OPTIND=1 opt
  while getopts ":hvnqC:-:" opt; do
    case "$opt" in
      h) show_help=1 ;;
      v) VERBOSE=$((VERBOSE+1)) ;;
      q) QUIET=1 ;;
      n) DRY_RUN=1 ;;
      C) CHANGE_DIR="$OPTARG" ;;
      -) case "$OPTARG" in version) show_version=1 ;; *) die "Unknown long option --$OPTARG";; esac ;;
      :) die "Option -$OPTARG requires an argument" ;;
      \?) die "Unknown option -$OPTARG" ;;
    esac
  done
  shift $((OPTIND-1)) || true
  [[ $show_help -eq 1 ]] && { usage; exit 0; }
  [[ $show_version -eq 1 ]] && { print_version; exit 0; }

  if [[ -n "$CHANGE_DIR" ]]; then
    [[ -d "$CHANGE_DIR" ]] || die "Directory not found: $CHANGE_DIR"
    cd "$CHANGE_DIR"
  fi

  require git
  while IFS= read -r -d '' d; do
    if [[ -d "$d/.git" ]]; then
      echo "Directory: $d"
      run git -C "$d" status
      echo "-----------------------------------"; echo
    fi
  done < <(find . -type d -name .git -print0 | xargs -0 -n1 dirname | sort -u -z)
}

main "$@"
