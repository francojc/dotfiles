#!/usr/bin/env bash

set -euo pipefail

show_help() {
    cat << EOF
pass-to-env - Convert pass passwords to environment variables

USAGE:
    pass-to-env [--help|-h]

DESCRIPTION:
    Extracts passwords from the pass password store and converts them
    to shell environment variables. Creates a .variables.env file
    with export statements for each password.

    Only the first line (password) of each pass entry is exported.
    Non-password files like private keys are automatically skipped.

DEPENDENCIES:
    - pass: Password store manager
    - gpg: GNU Privacy Guard for encryption

OUTPUT:
    - Creates ~/.variables.env with exported variables
    - File permissions set to 600 (secure)
    - Variables sorted alphabetically
    - Timestamp and header included

SECURITY NOTES:
    - Output file contains sensitive password data
    - File is created with restrictive permissions (600)
    - Consider security implications carefully
    - Use only when necessary

ENVIRONMENT:
    PASSWORD_STORE_DIR: Custom password store directory
                        (default: ~/.password-store)

EXAMPLES:
    pass-to-env
    # Extract passwords to ~/.variables.env

    pass-to-env --help
    # Show this help message

NOTES:
    - Skips .asc files (like private keys)
    - Overwrites existing ~/.variables.env file
    - Only extracts the password (first line) of each entry
    - Uses base filename as variable name

EOF
}

# Check for help flags
if [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
    show_help
    exit 0
fi

ENV_FILE="$HOME/.variables.env"

extract_passwords() {
  local temp_file
  local temp_exports
  temp_file=$(mktemp)
  temp_exports=$(mktemp)

  {
    echo "# Environment variables generated from pass"
    echo "# Generated on: $(date)"
    echo ""
  } > "$temp_file"

  # Find all .gpg files in the password store
  local pass_dir="${PASSWORD_STORE_DIR:-$HOME/.password-store}"

  while IFS= read -r gpg_file; do
    # Remove the password store directory prefix and .gpg suffix
    local entry_path="${gpg_file#$pass_dir/}"
    entry_path="${entry_path%.gpg}"

    # Skip private-key.asc and other non-password files
    [[ "$entry_path" == "private-key.asc" ]] && continue
    [[ "$entry_path" =~ \\.asc$ ]] && continue

    # Get the password using pass show
    local password
    password=$(pass show "$entry_path" 2>/dev/null | head -n 1)

    if [[ -n "$password" ]]; then
      # Extract just the key name (last part of the path)
      local key_name
      key_name=$(basename "$entry_path")
      echo "export $key_name=\"$password\"" >> "$temp_exports"
    fi
  done < <(find "$pass_dir" -name "*.gpg" -type f | sort)

  sort "$temp_exports" >> "$temp_file"
  rm -f "$temp_exports"

  mv "$temp_file" "$ENV_FILE"
}

main() {
  if ! command -v pass &> /dev/null; then
    echo "Error: 'pass' command not found. Please install pass first."
    exit 1
  fi

  echo "Extracting passwords from pass store..."
  extract_passwords

  chmod 600 "$ENV_FILE"
  echo "Successfully wrote environment variables to $ENV_FILE"
  echo "Total variables: $(grep -c '^export' "$ENV_FILE")"
}

main "$@"
